{"ast":null,"code":"var _jsxFileName = \"/Users/moumitasen/Projects/react-projects/netflix-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__movies\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row__posters\",\n        children: [movies.map(movie => {\n          return (isLargeRow && movie.poster_path || !isLargeRow && movie.backdrop_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n            src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.name\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this);\n        }), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/moumitasen/Projects/react-projects/netflix-clone/src/Row.js"],"names":["React","useEffect","useState","axios","Row","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","request","get","data","results","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,UAAU,GAAG;AAA/B,CAAb,EAAoD;AAAA;;AAEhD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,QAAQ,GAAG,sCAAjB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUP,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACG,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AAEDD,IAAAA,SAAS;AACZ,GARQ,EAQP,CAACL,QAAD,CARO,CAAT;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBAEKG,MAAM,CAACU,GAAP,CAAYC,KAAD,IAAW;AACnB,iBAAQ,CAAEZ,UAAU,IAAIY,KAAK,CAACC,WAArB,IACP,CAACb,UAAD,IAAeY,KAAK,CAACE,aADf,kBAEN;AAAoB,YAAA,SAAS,EAAG,eAAcd,UAAU,IAAI,kBAAmB,EAA/E;AACF,YAAA,GAAG,EAAG,GAAEG,QAAS,GACbH,UAAU,GAAGY,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAC1C,EAHC;AAIF,YAAA,GAAG,EAAEF,KAAK,CAACG;AAJT,aAAUH,KAAK,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAQH,SATA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA3CQnB,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\n\nfunction Row({title, fetchUrl, isLargeRow = false}) {\n    \n    const [movies, setMovies] = useState([]);\n\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n\n        fetchData();\n    },[fetchUrl]);\n\n    console.log(movies);\n\n    return (\n        <div className=\"all__movies\">\n            <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\">\n\n                {movies.map((movie) => {\n                    return (((isLargeRow && movie.poster_path) || \n                     (!isLargeRow && movie.backdrop_path)) &&\n                     (<img key={movie.id} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                    src={`${base_url}${\n                        isLargeRow ? movie.poster_path : movie.backdrop_path\n                    }`}\n                    alt={movie.name}\n                    />))\n                })};\n            </div>\n\n         \n\n        </div>\n        </div>\n      \n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}