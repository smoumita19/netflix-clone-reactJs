{"ast":null,"code":"import _regeneratorRuntime from\"/Users/moumitasen/Projects/react-projects/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/moumitasen/Projects/react-projects/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/moumitasen/Projects/react-projects/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'./axios';import\"./Row.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,_ref$isLargeRow=_ref.isLargeRow,isLargeRow=_ref$isLargeRow===void 0?false:_ref$isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var base_url=\"https://image.tmdb.org/t/p/original/\";useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);console.log(movies);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"row__posters\",children:[movies.map(function(movie){return(isLargeRow&&movie.poster_path||!isLargeRow&&movie.backdrop_path)&&/*#__PURE__*/_jsx(\"img\",{className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);}),\";\"]})]});}export default Row;","map":{"version":3,"sources":["/Users/moumitasen/Projects/react-projects/netflix-clone/src/Row.js"],"names":["React","useEffect","useState","axios","Row","title","fetchUrl","isLargeRow","movies","setMovies","base_url","fetchData","get","request","data","results","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":"ugBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,MAAoD,IAAtCC,CAAAA,KAAsC,MAAtCA,KAAsC,CAA/BC,QAA+B,MAA/BA,QAA+B,sBAArBC,UAAqB,CAArBA,UAAqB,0BAAR,KAAQ,iBAEhD,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAEAT,SAAS,CAAC,UAAM,SACGU,CAAAA,SADH,qIACZ,qKAC0BR,CAAAA,KAAK,CAACS,GAAN,CAAUN,QAAV,CAD1B,QACUO,OADV,eAEIJ,SAAS,CAACI,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,gCAGWF,OAHX,wDADY,4CAOZF,SAAS,GACZ,CARQ,CAQP,CAACL,QAAD,CARO,CAAT,CAUAU,OAAO,CAACC,GAAR,CAAYT,MAAZ,EAEA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKH,KAAL,EADJ,cAGI,aAAK,SAAS,CAAC,cAAf,WAEKG,MAAM,CAACU,GAAP,CAAW,SAACC,KAAD,CAAW,CACnB,MAAQ,CAAEZ,UAAU,EAAIY,KAAK,CAACC,WAArB,EACP,CAACb,UAAD,EAAeY,KAAK,CAACE,aADf,gBAEN,YAAoB,SAAS,uBAAiBd,UAAU,EAAI,kBAA/B,CAA7B,CACF,GAAG,WAAKG,QAAL,SACCH,UAAU,CAAGY,KAAK,CAACC,WAAT,CAAuBD,KAAK,CAACE,aADxC,CADD,CAIF,GAAG,CAAEF,KAAK,CAACG,IAJT,EAAUH,KAAK,CAACI,EAAhB,CAFF,CAQH,CATA,CAFL,OAHJ,GADJ,CAsBH,CAED,cAAenB,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\n\nfunction Row({title, fetchUrl, isLargeRow = false}) {\n    \n    const [movies, setMovies] = useState([]);\n\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n\n        fetchData();\n    },[fetchUrl]);\n\n    console.log(movies);\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\">\n\n                {movies.map((movie) => {\n                    return (((isLargeRow && movie.poster_path) || \n                     (!isLargeRow && movie.backdrop_path)) &&\n                     (<img key={movie.id} className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                    src={`${base_url}${\n                        isLargeRow ? movie.poster_path : movie.backdrop_path\n                    }`}\n                    alt={movie.name}\n                    />))\n                })};\n            </div>\n\n         \n\n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}